# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Company {
  id: ID!
  created_at: Date!
  name: String!
  users: [User!]!
}

"""Date custom scalar type"""
scalar Date

type User {
  id: ID!
  created_at: Date!
  username: String!
  email: String!
  accountType: AccountType!
  company: Company
  role: String!
}

enum AccountType {
  Normal
  Employee
  Organizer
}

type Project {
  id: ID!
  created_at: Date!
  created_by: User!
  name: String!
  company: Company
  tasks(offset: Int = 0, limit: Int = 10): [Task!]!
  creator: User!
}

type Task {
  id: ID!
  created_at: Date!
  created_by: User!
  type: TaskType!
  level: TaskLevel!
  description: String!
  project: Project
  creator: User!
}

enum TaskType {
  ISSUE
  TASK
  GOALS
}

enum TaskLevel {
  LOW
  NORMAL
  IMPORTANT
  VARY_IMPORTANT
}

type LoginResult {
  access_token: String!
}

type Query {
  findAllTask(offset: Int = 0, limit: Int = 10): [Task!]!
  findOneTask(id: ID!): Task!
  findAllProject(offset: Int = 0, limit: Int = 10): [Project!]!
  findOneProject(id: ID!): Project!
  findAllUser(offset: Int = 0, limit: Int = 10): [User!]!
  findOneUser(id: ID!): User!
  me: User!
  login(loginInput: LoginInput!): LoginResult!
  findAllCompany(offset: Int = 0, limit: Int = 10): [Company!]!
  findOneCompany(id: ID!): Company!
}

input LoginInput {
  username: String!
  password: String!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: ID!): Task!
  createProject(createProjectInput: CreateProjectInput!): Project!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  removeProject(id: ID!): Project!
  createUser(createUserInput: CreateUserInput!): User!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  removeCompany(id: ID!): Company!
}

input CreateTaskInput {
  type: TaskType!
  level: TaskLevel!
  description: String!
  projectId: ID
}

input UpdateTaskInput {
  type: TaskType
  level: TaskLevel
  description: String
  id: ID!
}

input CreateProjectInput {
  name: String!
}

input UpdateProjectInput {
  name: String
  id: Int!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

input CreateCompanyInput {
  name: String!
}

input UpdateCompanyInput {
  name: String
  id: Int!
}
